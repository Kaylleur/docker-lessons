kind: ConfigMap
apiVersion: v1
metadata:
  name: index-html
data:
  INDEX_HTML: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ASP Color Changer</title>
        <style>
            body, html {
                height: 100%;
                display: flex;
                justify-content: center;
                align-items: center;
                margin: 0;
            }

            h1 {
                font-size: 5em;
                font-weight: bold;
                text-align: center;
                margin: 0;
                cursor: pointer;
            }
        </style>
    </head>
    <body>
        <h1 id="aspText">ASP</h1>
        <script>
            function getRandomColor() {
                const letters = '0123456789ABCDEF';
                let color = '#';
                for (let i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }

            function changeColor() {
                const aspText = document.getElementById('aspText');
                aspText.style.color = getRandomColor();
            }

            setInterval(changeColor, 1000);
        </script>
    </body>
    </html>

---

kind: Pod
apiVersion: v1
metadata:
  name: web
  labels:
    app: web
spec:
  containers:
    - name: nginx
      image: nginx
      ports:
        - containerPort: 80
      volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: index-html
  volumes:
    - name: index-html
      configMap:
        name: index-html
        items:
          - key: INDEX_HTML
            path: index.html

---

kind: Service
apiVersion: v1
metadata:
  name: web
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: web-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /web(.*)
            backend:
              service:
                name: web
                port:
                  number: 80
